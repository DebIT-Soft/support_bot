from handlers.supports.spanel import send_support_keyboard
from aiogram import types
from aiogram.dispatcher import FSMContext
from data.config import SUPPORTS, SUPPORT_CHAT, DEBUG_MODE, USERS
from keyboards.default.suppanel import spanel_kb
from keyboards.default.upanel import upanel_kb

from loader import dp


# –≠—Ö–æ —Ö–µ–Ω–¥–ª–µ—Ä, –∫—É–¥–∞ –ª–µ—Ç—è—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
@dp.message_handler(state=None)
async def bot_echo(msg: types.Message):
    if DEBUG_MODE is True:
        if msg.from_user.id in SUPPORTS:
            await msg.answer('üö´ –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞.')

            await send_support_keyboard(msg = msg)
        else:
            await msg.answer('üö´ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.', reply_markup=await upanel_kb())
        # await msg.answer(f'–°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Å—Ç–µ–π—Ç–∞.\n\n{msg}')
        # await msg.answer('–°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Å—Ç–µ–π—Ç–∞, —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º :)')

# –≠—Ö–æ —Ö–µ–Ω–¥–ª–µ—Ä, –∫—É–¥–∞ –ª–µ—Ç—è—Ç –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
@dp.message_handler(state="*", content_types=types.ContentTypes.ANY)
async def bot_echo_all(msg: types.Message, state: FSMContext):
    if msg.chat.id > 0:
        state = await state.get_state()
        await msg.answer(f"–≠—Ö–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ <code>{state}</code>.\n"
                            f"\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n"
                            f"<code>{msg}</code>")
    # await msg.answer_sticker(r'CAACAgIAAxkBAAIIp2D16Qw3GiNEaDe9EVy5IFIiCjuDAAJGAQACVp29CkdInwU0JztkIAQ')

