from aiogram.types.message import Message
from attr import resolve_types
from data.config import SUPPORT_CHAT
from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from keyboards.default.upanel import *
from keyboards.inline.user_inline import *
from utils.db_work.auth_tools.is_user_authorized import is_authorized
from utils.other.users_process import is_subs
from loader import dp


@dp.message_handler(CommandStart())
async def bot_start(msg: Message):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∏–∑ –ª–∏—á–∫–∏
    if msg.chat.id > 0:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        response = await is_authorized(msg.from_user.username)

        if response is False:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
            await msg.answer(
                f'–ü—Ä–∏–≤–µ—Ç, {msg.from_user.full_name}!\n\n' +
                f'–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π <b>\"–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è\"</b> :)',
                reply_markup=await auth_kb()
            )
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
            await msg.answer(
                f'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {response}!\n\n' +
                f'–Ø –∑–∞–≥—Ä—É–∑–∏–ª –ø–∞–Ω–µ–ª—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ãüôÇ\n'+
                f'–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π \"–ü–æ–º–æ—â—å\" –∏–ª–∏ –≤–≤–µ–¥–∏ /help.',
                reply_markup=await upanel_kb()
            )

            subs_param, text = await is_subs(msg.from_user.id)

            if subs_param != 'ok':
                await msg.answer(
                        text,
                        reply_markup=await join_us(msg.from_user.id, subs_param)
                    )