import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage

from data import config


bot = Bot(token=config.BOT_TOKEN, parse_mode=types.ParseMode.HTML)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

""" 
–ü–∞—Ä—Å–µ—Ä –º–æ–Ω–≥–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –∏–º–µ–µ–Ω–æ –∑–¥–µ—Å—å,
—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
–≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –º–æ–¥—É–ª–µ
"""
def parse_mongo(loop):
    from utils.db_con.get_mongo_conn import get_mconn
    asyncio.set_event_loop(loop)
    
    with get_mconn() as db:
        coll = db.app_info

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±—É–¥–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏
        # —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏—é insert
        parser = coll.watch([{
            '$match': {
                'operationType': {
                    '$in': ['insert']
                }
            }
        }])

        for change in parser:
            msg_text = None
            admins_msg = None

            # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –≤ –±–∞–∑–µ
            data = change["fullDocument"]

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω–∏
            # –∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –±–æ—Ç—É
            if data["to"] == 'Bot':
                if data["type"] == 'crash':
                    msg_text = f'''ü§ï –£–ø—Å... –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å.

                    –ü—Ä–∏–≤–µ—Ç, —Ö–æ—á—É —Å–æ–æ–±—â–∏—Ç—å —Ç–µ–±–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ
                    <b>{data['pc_name']}</b> –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∞–π–Ω–µ—Ä,
                    –ª–æ–≥ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞—è–≤–∫—É –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É :)
                    '''

                    admins_msg = f'''ü§ï –£–ø—Å... –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å.

                    –í–µ—á–µ—Ä –≤ —Ö–∞—Ç—É, –ø–æ-–≤–∏–¥–∏–º–æ–º—É, –º–∞–π–Ω–µ—Ä –Ω–µ –∑–∞—Ö–æ—Ç–µ–ª –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:
                    –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: <b>{data['club']}</b>
                    –ö–æ–º–ø—å—é—Ç–µ—Ä: <b>{data['pc_name']}</b>
                    –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ü–ö:
                    ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
                    <b>–û–°:</b> {data['os']}
                    <b>–í–µ—Ä—Å–∏—è:</b> {data['os_ver']}
                    <b>–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:</b> {data['cpu']}
                    <b>–û–±—ä–µ–º –û–ü:</b> {data['ram']}
                    <b>–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:</b> {data['video_card']}
                    '''
                
                if data["type"] == 'notify':
                    if data["sub_type"] == 'lic_exp':
                        msg_text = f'''üïë –ò—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏.

                        –ü—Ä–∏–≤–µ—Ç, —Ö–æ—á—É —Å–æ–æ–±—â–∏—Ç—å —Ç–µ–±–µ –æ —Ç–æ–º, —á—Ç–æ —É —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
                        –ª–∏—Ü–µ–Ω–∑–∏–∏ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç <b>{data['app_name']}</b>.
                        
                        <i>–î–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ :)</i>
                        '''.replace('    ', '')

                if data["type"] == 'error':
                    msg_text = f'''
                    ü§ï –£–ø—Å... –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å.

                    –ü—Ä–∏–≤–µ—Ç, —Ö–æ—á—É —Å–æ–æ–±—â–∏—Ç—å —Ç–µ–±–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ
                    <b>{data['pc_name']}</b> –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:
                    –ü—Ä–æ–¥—É–∫—Ç: <b>{data['app']}</b>
                    –ö–æ–¥ –æ—à–∏–±–∫–∏: <b>{data['err_code']}</b>

                    <i>–î—É–º–∞—é, —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ –ø—Ä–æ–ø–∞–¥–µ—Ç, —Ç–æ
                    –º–æ–∂–µ–º –æ—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É :)</i>
                    '''

                    admins_msg = f'''ü§ï –£–ø—Å... –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å.

                    –í–µ—á–µ—Ä –≤ —Ö–∞—Ç—É, –≤ –ø—Ä–æ–¥—É–∫—Ç–µ <b>{data['app']}</b> –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ <i>({data['err_code']})</i>.
                    '''
                
                asyncio.run_coroutine_threadsafe(
                    send_data(
                        data["user_id"], 
                        msg_text.replace('                    ', ''), 
                        admins_msg.replace('                    ', '')), 
                        loop=loop)                
                # loop.create_task(send_data(data["user_id"], data["msg"]))

async def send_data(user_id, msg, admins_msg):
    await bot.send_message(
        user_id, msg
    )

    if admins_msg is not None:
        await bot.send_message(
            config.SUPPORT_CHAT,
            admins_msg
        )